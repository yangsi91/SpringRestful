<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:component-scan base-package="com.kitchen.dao" />
	

	
			<!-- mySQL DB연결위한 작업 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy">
		</property>
		<property name="url" value="jdbc:mysql://suns.kr/smartkitchen"></property>
		<property name="username" value="returnzero"></property>
		<property name="password" value="rzero"></property>
		
	</bean>
	<!-- 아래 코드를 추가하면 TimeDAO에 어노테이션을 쓰지않고도 스프링이 관리하는 클래스가된다. 왜냐하면 아래처럼 xml에서 
		설정을 해주기때문이다. -->
	<!-- com.avaldes.tutorial.TimeDAO 클래스의 객체를 만들고 이 객체의 프로퍼티를 만드는데 이때 property는 
		setter메소드를 기반으로 처리되므로 해당 클래스에 setter메소드가 있어야한다. 결국, 아래 코드는 dataSource라는 id로 
		있는 bean을 참조하여 이름이 ds인 프로퍼티를 추가하는 것이다. -->
	<bean class="com.kitchen.dao.TimeDao">
		<property name="ds" ref="dataSource"></property>
	</bean>
	
	<!-- Mutipart지원을 위한 빈 등록 -->
	<bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- SqlSessionFactoryBean 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 		<!-- mybatis-config.xml 파일이 스프링이 동작할 때 같이 동작하도록 설정한 것. -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*.xml"></property>
	</bean>
	<!-- sqlSession 을 SqlSessionTemplate으로 만든다. -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
</beans>
